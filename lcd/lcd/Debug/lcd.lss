
lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  0000081e  000008b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000081e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  0080010c  0080010c  000008be  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000091c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  0000095c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f43  00000000  00000000  00000a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a06  00000000  00000000  0000194f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000061b  00000000  00000000  00002355  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  00002970  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000542  00000000  00000000  00002ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004a7  00000000  00000000  0000301a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000034c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e1       	ldi	r30, 0x1E	; 30
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 30       	cpi	r26, 0x0D	; 13
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	9e d0       	rcall	.+316    	; 0x200 <main>
  c4:	aa c3       	rjmp	.+1876   	; 0x81a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <GPIO_writeControlData>:
﻿#include "LCD.h"

void GPIO_writeControlData(uint8_t data)
{
	LCD_CONTROL_PORT = data;
  c8:	88 bb       	out	0x18, r24	; 24
  ca:	08 95       	ret

000000cc <GPIO_writeData>:
}

void GPIO_writeData(uint8_t data)
{
	LCD_DATA_PORT = data;
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	08 95       	ret

000000d0 <GPIO_init>:
}

void GPIO_init()
{
	LCD_CONTROL_DDR |= (1<<LCD_RS) | (1<<LCD_RW) | (1<<LCD_E);
  d0:	87 b3       	in	r24, 0x17	; 23
  d2:	80 6e       	ori	r24, 0xE0	; 224
  d4:	87 bb       	out	0x17, r24	; 23
	LCD_DATA_DDR |= 0xff;
  d6:	84 b3       	in	r24, 0x14	; 20
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret

000000de <LCD_cmdMode>:
}

void LCD_cmdMode()
{
	//RS -> low
	lcdControlData &= ~(1 << LCD_RS);
  de:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
  e2:	8f 7d       	andi	r24, 0xDF	; 223
  e4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
	GPIO_writeControlData(lcdControlData);
  e8:	ef cf       	rjmp	.-34     	; 0xc8 <GPIO_writeControlData>
  ea:	08 95       	ret

000000ec <LCD_charMode>:
}
void LCD_charMode()
{
	//RS -> high
	lcdControlData |= (1 << LCD_RS);
  ec:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
  f0:	80 62       	ori	r24, 0x20	; 32
  f2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
	GPIO_writeControlData(lcdControlData);
  f6:	e8 cf       	rjmp	.-48     	; 0xc8 <GPIO_writeControlData>
  f8:	08 95       	ret

000000fa <LCD_writeMode>:
}

void LCD_writeMode()
{
	//RW -> low
	lcdControlData &= ~(1 << LCD_RW);
  fa:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
  fe:	8f 7b       	andi	r24, 0xBF	; 191
 100:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
	GPIO_writeControlData(lcdControlData);
 104:	e1 cf       	rjmp	.-62     	; 0xc8 <GPIO_writeControlData>
 106:	08 95       	ret

00000108 <LCD_enableHigh>:
}

void LCD_enableHigh()
{
	lcdControlData |= (1 << LCD_E);
 108:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 10c:	80 68       	ori	r24, 0x80	; 128
 10e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
	GPIO_writeControlData(lcdControlData);
 112:	da df       	rcall	.-76     	; 0xc8 <GPIO_writeControlData>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 114:	8f e9       	ldi	r24, 0x9F	; 159
 116:	9f e0       	ldi	r25, 0x0F	; 15
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <LCD_enableHigh+0x10>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <LCD_enableHigh+0x16>
 11e:	00 00       	nop
 120:	08 95       	ret

00000122 <LCD_enableLow>:
	_delay_ms(1);
}

void LCD_enableLow()
{
	lcdControlData &= ~(1 << LCD_E);
 122:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 126:	8f 77       	andi	r24, 0x7F	; 127
 128:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
	GPIO_writeControlData(lcdControlData);
 12c:	cd df       	rcall	.-102    	; 0xc8 <GPIO_writeControlData>
 12e:	8f e9       	ldi	r24, 0x9F	; 159
 130:	9f e0       	ldi	r25, 0x0F	; 15
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <LCD_enableLow+0x10>
 136:	00 c0       	rjmp	.+0      	; 0x138 <LCD_enableLow+0x16>
 138:	00 00       	nop
 13a:	08 95       	ret

0000013c <LCD_writeByte>:
	_delay_ms(1);
}

void LCD_writeByte(uint8_t data)
{
	GPIO_writeData(data);
 13c:	c7 cf       	rjmp	.-114    	; 0xcc <GPIO_writeData>
 13e:	08 95       	ret

00000140 <LCD_writeCmdData>:
}

void LCD_writeCmdData(uint8_t data)
{
 140:	cf 93       	push	r28
 142:	c8 2f       	mov	r28, r24
	//lcd 내부 명령어 동작에 대한 함수
	LCD_cmdMode();
 144:	cc df       	rcall	.-104    	; 0xde <LCD_cmdMode>
	LCD_writeMode();
 146:	d9 df       	rcall	.-78     	; 0xfa <LCD_writeMode>
	LCD_enableHigh();
 148:	df df       	rcall	.-66     	; 0x108 <LCD_enableHigh>
	LCD_writeByte(data);
 14a:	8c 2f       	mov	r24, r28
 14c:	f7 df       	rcall	.-18     	; 0x13c <LCD_writeByte>
 14e:	e9 df       	rcall	.-46     	; 0x122 <LCD_enableLow>
	LCD_enableLow();
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <LCD_init>:
}
 154:	bd df       	rcall	.-134    	; 0xd0 <GPIO_init>
 156:	8f e5       	ldi	r24, 0x5F	; 95
 158:	9a ee       	ldi	r25, 0xEA	; 234
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <LCD_init+0x6>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <LCD_init+0xc>
 160:	00 00       	nop
{
	GPIO_init();
	
	_delay_ms(15);
	//function set: 0 0 1 DL=1 N=1 F=0 0 0  -> 0x38
	LCD_writeCmdData(0x38);
 162:	88 e3       	ldi	r24, 0x38	; 56
 164:	ed df       	rcall	.-38     	; 0x140 <LCD_writeCmdData>
 166:	8f e1       	ldi	r24, 0x1F	; 31
 168:	9e e4       	ldi	r25, 0x4E	; 78
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <LCD_init+0x16>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <LCD_init+0x1c>
	_delay_ms(5);
	//function set: 0 0 1 DL=1 N=1 F=0 0 0  -> 0x38
	LCD_writeCmdData(0x38);
 170:	00 00       	nop
 172:	88 e3       	ldi	r24, 0x38	; 56
 174:	e5 df       	rcall	.-54     	; 0x140 <LCD_writeCmdData>
 176:	8f e9       	ldi	r24, 0x9F	; 159
 178:	9f e0       	ldi	r25, 0x0F	; 15
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <LCD_init+0x26>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <LCD_init+0x2c>
	_delay_ms(1);
	//function set: 0 0 1 DL=1 N=1 F=0 0 0  -> 0x38
	LCD_writeCmdData(0x38);
 180:	00 00       	nop
 182:	88 e3       	ldi	r24, 0x38	; 56
	//function set: 0 0 1 DL=1 N=1 F=0 0 0  -> 0x38
	LCD_writeCmdData(0x38);
 184:	dd df       	rcall	.-70     	; 0x140 <LCD_writeCmdData>
 186:	88 e3       	ldi	r24, 0x38	; 56
	//LCD_DISPLAY_OFF
	LCD_writeCmdData(0x08);
 188:	db df       	rcall	.-74     	; 0x140 <LCD_writeCmdData>
 18a:	88 e0       	ldi	r24, 0x08	; 8
	//LCD_DISPLAY_CLEAR
	LCD_writeCmdData(0x01);
 18c:	d9 df       	rcall	.-78     	; 0x140 <LCD_writeCmdData>
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	d7 df       	rcall	.-82     	; 0x140 <LCD_writeCmdData>
	//ENTRY_MODE_SET
	LCD_writeCmdData(0x06);
 192:	86 e0       	ldi	r24, 0x06	; 6
 194:	d5 df       	rcall	.-86     	; 0x140 <LCD_writeCmdData>
 196:	8c e0       	ldi	r24, 0x0C	; 12
	
	//LCD_DISPLAY_ON
	LCD_writeCmdData(0x0C);
 198:	d3 cf       	rjmp	.-90     	; 0x140 <LCD_writeCmdData>
 19a:	08 95       	ret

0000019c <LCD_writeCharData>:
 19c:	cf 93       	push	r28
 19e:	c8 2f       	mov	r28, r24
}

void LCD_writeCharData(uint8_t data)
{
	//lcd char 쓰는 동작
	LCD_charMode();
 1a0:	a5 df       	rcall	.-182    	; 0xec <LCD_charMode>
	LCD_writeMode();
 1a2:	ab df       	rcall	.-170    	; 0xfa <LCD_writeMode>
	LCD_enableHigh();
 1a4:	b1 df       	rcall	.-158    	; 0x108 <LCD_enableHigh>
	LCD_writeByte(data);
 1a6:	8c 2f       	mov	r24, r28
 1a8:	c9 df       	rcall	.-110    	; 0x13c <LCD_writeByte>
 1aa:	bb df       	rcall	.-138    	; 0x122 <LCD_enableLow>
	LCD_enableLow();
 1ac:	cf 91       	pop	r28
 1ae:	08 95       	ret

000001b0 <LCD_writeString>:
}
 1b0:	0f 93       	push	r16
 1b2:	1f 93       	push	r17

void LCD_writeString(const char *str)
{
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	8c 01       	movw	r16, r24
	for (int i = 0; str[i]; i++)
 1ba:	c0 e0       	ldi	r28, 0x00	; 0
 1bc:	d0 e0       	ldi	r29, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <LCD_writeString+0x14>
	LCD_writeCharData(str[i]);
 1c0:	ed df       	rcall	.-38     	; 0x19c <LCD_writeCharData>
	LCD_enableLow();
}

void LCD_writeString(const char *str)
{
	for (int i = 0; str[i]; i++)
 1c2:	21 96       	adiw	r28, 0x01	; 1
 1c4:	f8 01       	movw	r30, r16
 1c6:	ec 0f       	add	r30, r28
 1c8:	fd 1f       	adc	r31, r29
 1ca:	80 81       	ld	r24, Z
 1cc:	81 11       	cpse	r24, r1
 1ce:	f8 cf       	rjmp	.-16     	; 0x1c0 <LCD_writeString+0x10>
	LCD_writeCharData(str[i]);
}
 1d0:	df 91       	pop	r29
 1d2:	cf 91       	pop	r28
 1d4:	1f 91       	pop	r17
 1d6:	0f 91       	pop	r16
 1d8:	08 95       	ret

000001da <LCD_goToXY>:

void LCD_goToXY(uint8_t row, uint8_t col)
{
	col %= 16, row %= 2;
 1da:	6f 70       	andi	r22, 0x0F	; 15
 1dc:	81 70       	andi	r24, 0x01	; 1
	uint8_t lcdRegisterAddress = (0x40 * row) + col;
 1de:	90 e4       	ldi	r25, 0x40	; 64
 1e0:	89 9f       	mul	r24, r25
 1e2:	60 0d       	add	r22, r0
 1e4:	11 24       	eor	r1, r1
 1e6:	86 2f       	mov	r24, r22
	uint8_t command = 0x80 + lcdRegisterAddress;
	LCD_writeCmdData(command);
 1e8:	80 58       	subi	r24, 0x80	; 128
 1ea:	aa cf       	rjmp	.-172    	; 0x140 <LCD_writeCmdData>
 1ec:	08 95       	ret

000001ee <LCD_writeStringXY>:
}

void LCD_writeStringXY(uint8_t row, uint8_t col, const char *str)
{
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	ea 01       	movw	r28, r20
	LCD_goToXY(row, col);
 1f4:	f2 df       	rcall	.-28     	; 0x1da <LCD_goToXY>
	LCD_writeString(str);
 1f6:	ce 01       	movw	r24, r28
 1f8:	db df       	rcall	.-74     	; 0x1b0 <LCD_writeString>
 1fa:	df 91       	pop	r29
 1fc:	cf 91       	pop	r28
 1fe:	08 95       	ret

00000200 <main>:
#include <stdio.h>

#include "driver/LCD/LCD.h"

int main(void)
{
 200:	cf 93       	push	r28
 202:	df 93       	push	r29
 204:	cd b7       	in	r28, 0x3d	; 61
 206:	de b7       	in	r29, 0x3e	; 62
 208:	6e 97       	sbiw	r28, 0x1e	; 30
 20a:	0f b6       	in	r0, 0x3f	; 63
 20c:	f8 94       	cli
 20e:	de bf       	out	0x3e, r29	; 62
 210:	0f be       	out	0x3f, r0	; 63
 212:	cd bf       	out	0x3d, r28	; 61
	LCD_init();
 214:	9f df       	rcall	.-194    	; 0x154 <LCD_init>
	
	char buff[30];
	
	uint16_t counter = 0;
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	90 e0       	ldi	r25, 0x00	; 0
	
    while (1) 
    {
		sprintf(buff, "counter: %d", counter++);	
 21a:	7c 01       	movw	r14, r24
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	e2 1a       	sub	r14, r18
 220:	f2 0a       	sbc	r15, r18
 222:	9f 93       	push	r25
 224:	8f 93       	push	r24
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	91 e0       	ldi	r25, 0x01	; 1
 22a:	9f 93       	push	r25
 22c:	8f 93       	push	r24
 22e:	8e 01       	movw	r16, r28
 230:	0f 5f       	subi	r16, 0xFF	; 255
 232:	1f 4f       	sbci	r17, 0xFF	; 255
 234:	1f 93       	push	r17
 236:	0f 93       	push	r16
 238:	15 d0       	rcall	.+42     	; 0x264 <sprintf>
		LCD_writeStringXY(0, 3, buff);
 23a:	a8 01       	movw	r20, r16
 23c:	63 e0       	ldi	r22, 0x03	; 3
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	d6 df       	rcall	.-84     	; 0x1ee <LCD_writeStringXY>
 242:	8f ef       	ldi	r24, 0xFF	; 255
 244:	93 ed       	ldi	r25, 0xD3	; 211
 246:	20 e3       	ldi	r18, 0x30	; 48
 248:	81 50       	subi	r24, 0x01	; 1
 24a:	90 40       	sbci	r25, 0x00	; 0
 24c:	20 40       	sbci	r18, 0x00	; 0
 24e:	e1 f7       	brne	.-8      	; 0x248 <main+0x48>
 250:	00 c0       	rjmp	.+0      	; 0x252 <main+0x52>
 252:	00 00       	nop
	
	uint16_t counter = 0;
	
    while (1) 
    {
		sprintf(buff, "counter: %d", counter++);	
 254:	0f 90       	pop	r0
 256:	0f 90       	pop	r0
 258:	0f 90       	pop	r0
 25a:	0f 90       	pop	r0
 25c:	0f 90       	pop	r0
 25e:	0f 90       	pop	r0
 260:	c7 01       	movw	r24, r14
 262:	db cf       	rjmp	.-74     	; 0x21a <main+0x1a>

00000264 <sprintf>:
 264:	0f 93       	push	r16
 266:	1f 93       	push	r17
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	cd b7       	in	r28, 0x3d	; 61
 26e:	de b7       	in	r29, 0x3e	; 62
 270:	2e 97       	sbiw	r28, 0x0e	; 14
 272:	0f b6       	in	r0, 0x3f	; 63
 274:	f8 94       	cli
 276:	de bf       	out	0x3e, r29	; 62
 278:	0f be       	out	0x3f, r0	; 63
 27a:	cd bf       	out	0x3d, r28	; 61
 27c:	0d 89       	ldd	r16, Y+21	; 0x15
 27e:	1e 89       	ldd	r17, Y+22	; 0x16
 280:	86 e0       	ldi	r24, 0x06	; 6
 282:	8c 83       	std	Y+4, r24	; 0x04
 284:	1a 83       	std	Y+2, r17	; 0x02
 286:	09 83       	std	Y+1, r16	; 0x01
 288:	8f ef       	ldi	r24, 0xFF	; 255
 28a:	9f e7       	ldi	r25, 0x7F	; 127
 28c:	9e 83       	std	Y+6, r25	; 0x06
 28e:	8d 83       	std	Y+5, r24	; 0x05
 290:	ae 01       	movw	r20, r28
 292:	47 5e       	subi	r20, 0xE7	; 231
 294:	5f 4f       	sbci	r21, 0xFF	; 255
 296:	6f 89       	ldd	r22, Y+23	; 0x17
 298:	78 8d       	ldd	r23, Y+24	; 0x18
 29a:	ce 01       	movw	r24, r28
 29c:	01 96       	adiw	r24, 0x01	; 1
 29e:	10 d0       	rcall	.+32     	; 0x2c0 <vfprintf>
 2a0:	ef 81       	ldd	r30, Y+7	; 0x07
 2a2:	f8 85       	ldd	r31, Y+8	; 0x08
 2a4:	e0 0f       	add	r30, r16
 2a6:	f1 1f       	adc	r31, r17
 2a8:	10 82       	st	Z, r1
 2aa:	2e 96       	adiw	r28, 0x0e	; 14
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	f8 94       	cli
 2b0:	de bf       	out	0x3e, r29	; 62
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	cd bf       	out	0x3d, r28	; 61
 2b6:	df 91       	pop	r29
 2b8:	cf 91       	pop	r28
 2ba:	1f 91       	pop	r17
 2bc:	0f 91       	pop	r16
 2be:	08 95       	ret

000002c0 <vfprintf>:
 2c0:	2f 92       	push	r2
 2c2:	3f 92       	push	r3
 2c4:	4f 92       	push	r4
 2c6:	5f 92       	push	r5
 2c8:	6f 92       	push	r6
 2ca:	7f 92       	push	r7
 2cc:	8f 92       	push	r8
 2ce:	9f 92       	push	r9
 2d0:	af 92       	push	r10
 2d2:	bf 92       	push	r11
 2d4:	cf 92       	push	r12
 2d6:	df 92       	push	r13
 2d8:	ef 92       	push	r14
 2da:	ff 92       	push	r15
 2dc:	0f 93       	push	r16
 2de:	1f 93       	push	r17
 2e0:	cf 93       	push	r28
 2e2:	df 93       	push	r29
 2e4:	cd b7       	in	r28, 0x3d	; 61
 2e6:	de b7       	in	r29, 0x3e	; 62
 2e8:	2b 97       	sbiw	r28, 0x0b	; 11
 2ea:	0f b6       	in	r0, 0x3f	; 63
 2ec:	f8 94       	cli
 2ee:	de bf       	out	0x3e, r29	; 62
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	cd bf       	out	0x3d, r28	; 61
 2f4:	6c 01       	movw	r12, r24
 2f6:	7b 01       	movw	r14, r22
 2f8:	8a 01       	movw	r16, r20
 2fa:	fc 01       	movw	r30, r24
 2fc:	17 82       	std	Z+7, r1	; 0x07
 2fe:	16 82       	std	Z+6, r1	; 0x06
 300:	83 81       	ldd	r24, Z+3	; 0x03
 302:	81 ff       	sbrs	r24, 1
 304:	bf c1       	rjmp	.+894    	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 306:	ce 01       	movw	r24, r28
 308:	01 96       	adiw	r24, 0x01	; 1
 30a:	3c 01       	movw	r6, r24
 30c:	f6 01       	movw	r30, r12
 30e:	93 81       	ldd	r25, Z+3	; 0x03
 310:	f7 01       	movw	r30, r14
 312:	93 fd       	sbrc	r25, 3
 314:	85 91       	lpm	r24, Z+
 316:	93 ff       	sbrs	r25, 3
 318:	81 91       	ld	r24, Z+
 31a:	7f 01       	movw	r14, r30
 31c:	88 23       	and	r24, r24
 31e:	09 f4       	brne	.+2      	; 0x322 <vfprintf+0x62>
 320:	ad c1       	rjmp	.+858    	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 322:	85 32       	cpi	r24, 0x25	; 37
 324:	39 f4       	brne	.+14     	; 0x334 <vfprintf+0x74>
 326:	93 fd       	sbrc	r25, 3
 328:	85 91       	lpm	r24, Z+
 32a:	93 ff       	sbrs	r25, 3
 32c:	81 91       	ld	r24, Z+
 32e:	7f 01       	movw	r14, r30
 330:	85 32       	cpi	r24, 0x25	; 37
 332:	21 f4       	brne	.+8      	; 0x33c <vfprintf+0x7c>
 334:	b6 01       	movw	r22, r12
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	d6 d1       	rcall	.+940    	; 0x6e6 <fputc>
 33a:	e8 cf       	rjmp	.-48     	; 0x30c <vfprintf+0x4c>
 33c:	91 2c       	mov	r9, r1
 33e:	21 2c       	mov	r2, r1
 340:	31 2c       	mov	r3, r1
 342:	ff e1       	ldi	r31, 0x1F	; 31
 344:	f3 15       	cp	r31, r3
 346:	d8 f0       	brcs	.+54     	; 0x37e <vfprintf+0xbe>
 348:	8b 32       	cpi	r24, 0x2B	; 43
 34a:	79 f0       	breq	.+30     	; 0x36a <vfprintf+0xaa>
 34c:	38 f4       	brcc	.+14     	; 0x35c <vfprintf+0x9c>
 34e:	80 32       	cpi	r24, 0x20	; 32
 350:	79 f0       	breq	.+30     	; 0x370 <vfprintf+0xb0>
 352:	83 32       	cpi	r24, 0x23	; 35
 354:	a1 f4       	brne	.+40     	; 0x37e <vfprintf+0xbe>
 356:	23 2d       	mov	r18, r3
 358:	20 61       	ori	r18, 0x10	; 16
 35a:	1d c0       	rjmp	.+58     	; 0x396 <vfprintf+0xd6>
 35c:	8d 32       	cpi	r24, 0x2D	; 45
 35e:	61 f0       	breq	.+24     	; 0x378 <vfprintf+0xb8>
 360:	80 33       	cpi	r24, 0x30	; 48
 362:	69 f4       	brne	.+26     	; 0x37e <vfprintf+0xbe>
 364:	23 2d       	mov	r18, r3
 366:	21 60       	ori	r18, 0x01	; 1
 368:	16 c0       	rjmp	.+44     	; 0x396 <vfprintf+0xd6>
 36a:	83 2d       	mov	r24, r3
 36c:	82 60       	ori	r24, 0x02	; 2
 36e:	38 2e       	mov	r3, r24
 370:	e3 2d       	mov	r30, r3
 372:	e4 60       	ori	r30, 0x04	; 4
 374:	3e 2e       	mov	r3, r30
 376:	2a c0       	rjmp	.+84     	; 0x3cc <vfprintf+0x10c>
 378:	f3 2d       	mov	r31, r3
 37a:	f8 60       	ori	r31, 0x08	; 8
 37c:	1d c0       	rjmp	.+58     	; 0x3b8 <vfprintf+0xf8>
 37e:	37 fc       	sbrc	r3, 7
 380:	2d c0       	rjmp	.+90     	; 0x3dc <vfprintf+0x11c>
 382:	20 ed       	ldi	r18, 0xD0	; 208
 384:	28 0f       	add	r18, r24
 386:	2a 30       	cpi	r18, 0x0A	; 10
 388:	40 f0       	brcs	.+16     	; 0x39a <vfprintf+0xda>
 38a:	8e 32       	cpi	r24, 0x2E	; 46
 38c:	b9 f4       	brne	.+46     	; 0x3bc <vfprintf+0xfc>
 38e:	36 fc       	sbrc	r3, 6
 390:	75 c1       	rjmp	.+746    	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 392:	23 2d       	mov	r18, r3
 394:	20 64       	ori	r18, 0x40	; 64
 396:	32 2e       	mov	r3, r18
 398:	19 c0       	rjmp	.+50     	; 0x3cc <vfprintf+0x10c>
 39a:	36 fe       	sbrs	r3, 6
 39c:	06 c0       	rjmp	.+12     	; 0x3aa <vfprintf+0xea>
 39e:	8a e0       	ldi	r24, 0x0A	; 10
 3a0:	98 9e       	mul	r9, r24
 3a2:	20 0d       	add	r18, r0
 3a4:	11 24       	eor	r1, r1
 3a6:	92 2e       	mov	r9, r18
 3a8:	11 c0       	rjmp	.+34     	; 0x3cc <vfprintf+0x10c>
 3aa:	ea e0       	ldi	r30, 0x0A	; 10
 3ac:	2e 9e       	mul	r2, r30
 3ae:	20 0d       	add	r18, r0
 3b0:	11 24       	eor	r1, r1
 3b2:	22 2e       	mov	r2, r18
 3b4:	f3 2d       	mov	r31, r3
 3b6:	f0 62       	ori	r31, 0x20	; 32
 3b8:	3f 2e       	mov	r3, r31
 3ba:	08 c0       	rjmp	.+16     	; 0x3cc <vfprintf+0x10c>
 3bc:	8c 36       	cpi	r24, 0x6C	; 108
 3be:	21 f4       	brne	.+8      	; 0x3c8 <vfprintf+0x108>
 3c0:	83 2d       	mov	r24, r3
 3c2:	80 68       	ori	r24, 0x80	; 128
 3c4:	38 2e       	mov	r3, r24
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <vfprintf+0x10c>
 3c8:	88 36       	cpi	r24, 0x68	; 104
 3ca:	41 f4       	brne	.+16     	; 0x3dc <vfprintf+0x11c>
 3cc:	f7 01       	movw	r30, r14
 3ce:	93 fd       	sbrc	r25, 3
 3d0:	85 91       	lpm	r24, Z+
 3d2:	93 ff       	sbrs	r25, 3
 3d4:	81 91       	ld	r24, Z+
 3d6:	7f 01       	movw	r14, r30
 3d8:	81 11       	cpse	r24, r1
 3da:	b3 cf       	rjmp	.-154    	; 0x342 <vfprintf+0x82>
 3dc:	98 2f       	mov	r25, r24
 3de:	9f 7d       	andi	r25, 0xDF	; 223
 3e0:	95 54       	subi	r25, 0x45	; 69
 3e2:	93 30       	cpi	r25, 0x03	; 3
 3e4:	28 f4       	brcc	.+10     	; 0x3f0 <vfprintf+0x130>
 3e6:	0c 5f       	subi	r16, 0xFC	; 252
 3e8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ea:	9f e3       	ldi	r25, 0x3F	; 63
 3ec:	99 83       	std	Y+1, r25	; 0x01
 3ee:	0d c0       	rjmp	.+26     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f0:	83 36       	cpi	r24, 0x63	; 99
 3f2:	31 f0       	breq	.+12     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f4:	83 37       	cpi	r24, 0x73	; 115
 3f6:	71 f0       	breq	.+28     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3f8:	83 35       	cpi	r24, 0x53	; 83
 3fa:	09 f0       	breq	.+2      	; 0x3fe <vfprintf+0x13e>
 3fc:	55 c0       	rjmp	.+170    	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 3fe:	20 c0       	rjmp	.+64     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 400:	f8 01       	movw	r30, r16
 402:	80 81       	ld	r24, Z
 404:	89 83       	std	Y+1, r24	; 0x01
 406:	0e 5f       	subi	r16, 0xFE	; 254
 408:	1f 4f       	sbci	r17, 0xFF	; 255
 40a:	88 24       	eor	r8, r8
 40c:	83 94       	inc	r8
 40e:	91 2c       	mov	r9, r1
 410:	53 01       	movw	r10, r6
 412:	12 c0       	rjmp	.+36     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 414:	28 01       	movw	r4, r16
 416:	f2 e0       	ldi	r31, 0x02	; 2
 418:	4f 0e       	add	r4, r31
 41a:	51 1c       	adc	r5, r1
 41c:	f8 01       	movw	r30, r16
 41e:	a0 80       	ld	r10, Z
 420:	b1 80       	ldd	r11, Z+1	; 0x01
 422:	36 fe       	sbrs	r3, 6
 424:	03 c0       	rjmp	.+6      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 426:	69 2d       	mov	r22, r9
 428:	70 e0       	ldi	r23, 0x00	; 0
 42a:	02 c0       	rjmp	.+4      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42c:	6f ef       	ldi	r22, 0xFF	; 255
 42e:	7f ef       	ldi	r23, 0xFF	; 255
 430:	c5 01       	movw	r24, r10
 432:	4e d1       	rcall	.+668    	; 0x6d0 <strnlen>
 434:	4c 01       	movw	r8, r24
 436:	82 01       	movw	r16, r4
 438:	f3 2d       	mov	r31, r3
 43a:	ff 77       	andi	r31, 0x7F	; 127
 43c:	3f 2e       	mov	r3, r31
 43e:	15 c0       	rjmp	.+42     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 440:	28 01       	movw	r4, r16
 442:	22 e0       	ldi	r18, 0x02	; 2
 444:	42 0e       	add	r4, r18
 446:	51 1c       	adc	r5, r1
 448:	f8 01       	movw	r30, r16
 44a:	a0 80       	ld	r10, Z
 44c:	b1 80       	ldd	r11, Z+1	; 0x01
 44e:	36 fe       	sbrs	r3, 6
 450:	03 c0       	rjmp	.+6      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 452:	69 2d       	mov	r22, r9
 454:	70 e0       	ldi	r23, 0x00	; 0
 456:	02 c0       	rjmp	.+4      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 458:	6f ef       	ldi	r22, 0xFF	; 255
 45a:	7f ef       	ldi	r23, 0xFF	; 255
 45c:	c5 01       	movw	r24, r10
 45e:	2d d1       	rcall	.+602    	; 0x6ba <strnlen_P>
 460:	4c 01       	movw	r8, r24
 462:	f3 2d       	mov	r31, r3
 464:	f0 68       	ori	r31, 0x80	; 128
 466:	3f 2e       	mov	r3, r31
 468:	82 01       	movw	r16, r4
 46a:	33 fc       	sbrc	r3, 3
 46c:	19 c0       	rjmp	.+50     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 46e:	82 2d       	mov	r24, r2
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	88 16       	cp	r8, r24
 474:	99 06       	cpc	r9, r25
 476:	a0 f4       	brcc	.+40     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 478:	b6 01       	movw	r22, r12
 47a:	80 e2       	ldi	r24, 0x20	; 32
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	33 d1       	rcall	.+614    	; 0x6e6 <fputc>
 480:	2a 94       	dec	r2
 482:	f5 cf       	rjmp	.-22     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 484:	f5 01       	movw	r30, r10
 486:	37 fc       	sbrc	r3, 7
 488:	85 91       	lpm	r24, Z+
 48a:	37 fe       	sbrs	r3, 7
 48c:	81 91       	ld	r24, Z+
 48e:	5f 01       	movw	r10, r30
 490:	b6 01       	movw	r22, r12
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	28 d1       	rcall	.+592    	; 0x6e6 <fputc>
 496:	21 10       	cpse	r2, r1
 498:	2a 94       	dec	r2
 49a:	21 e0       	ldi	r18, 0x01	; 1
 49c:	82 1a       	sub	r8, r18
 49e:	91 08       	sbc	r9, r1
 4a0:	81 14       	cp	r8, r1
 4a2:	91 04       	cpc	r9, r1
 4a4:	79 f7       	brne	.-34     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 4a6:	e1 c0       	rjmp	.+450    	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 4a8:	84 36       	cpi	r24, 0x64	; 100
 4aa:	11 f0       	breq	.+4      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4ac:	89 36       	cpi	r24, 0x69	; 105
 4ae:	39 f5       	brne	.+78     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4b0:	f8 01       	movw	r30, r16
 4b2:	37 fe       	sbrs	r3, 7
 4b4:	07 c0       	rjmp	.+14     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b6:	60 81       	ld	r22, Z
 4b8:	71 81       	ldd	r23, Z+1	; 0x01
 4ba:	82 81       	ldd	r24, Z+2	; 0x02
 4bc:	93 81       	ldd	r25, Z+3	; 0x03
 4be:	0c 5f       	subi	r16, 0xFC	; 252
 4c0:	1f 4f       	sbci	r17, 0xFF	; 255
 4c2:	08 c0       	rjmp	.+16     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4c4:	60 81       	ld	r22, Z
 4c6:	71 81       	ldd	r23, Z+1	; 0x01
 4c8:	07 2e       	mov	r0, r23
 4ca:	00 0c       	add	r0, r0
 4cc:	88 0b       	sbc	r24, r24
 4ce:	99 0b       	sbc	r25, r25
 4d0:	0e 5f       	subi	r16, 0xFE	; 254
 4d2:	1f 4f       	sbci	r17, 0xFF	; 255
 4d4:	f3 2d       	mov	r31, r3
 4d6:	ff 76       	andi	r31, 0x6F	; 111
 4d8:	3f 2e       	mov	r3, r31
 4da:	97 ff       	sbrs	r25, 7
 4dc:	09 c0       	rjmp	.+18     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4de:	90 95       	com	r25
 4e0:	80 95       	com	r24
 4e2:	70 95       	com	r23
 4e4:	61 95       	neg	r22
 4e6:	7f 4f       	sbci	r23, 0xFF	; 255
 4e8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ea:	9f 4f       	sbci	r25, 0xFF	; 255
 4ec:	f0 68       	ori	r31, 0x80	; 128
 4ee:	3f 2e       	mov	r3, r31
 4f0:	2a e0       	ldi	r18, 0x0A	; 10
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	a3 01       	movw	r20, r6
 4f6:	33 d1       	rcall	.+614    	; 0x75e <__ultoa_invert>
 4f8:	88 2e       	mov	r8, r24
 4fa:	86 18       	sub	r8, r6
 4fc:	44 c0       	rjmp	.+136    	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 4fe:	85 37       	cpi	r24, 0x75	; 117
 500:	31 f4       	brne	.+12     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 502:	23 2d       	mov	r18, r3
 504:	2f 7e       	andi	r18, 0xEF	; 239
 506:	b2 2e       	mov	r11, r18
 508:	2a e0       	ldi	r18, 0x0A	; 10
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	25 c0       	rjmp	.+74     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 50e:	93 2d       	mov	r25, r3
 510:	99 7f       	andi	r25, 0xF9	; 249
 512:	b9 2e       	mov	r11, r25
 514:	8f 36       	cpi	r24, 0x6F	; 111
 516:	c1 f0       	breq	.+48     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 518:	18 f4       	brcc	.+6      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 51a:	88 35       	cpi	r24, 0x58	; 88
 51c:	79 f0       	breq	.+30     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 51e:	ae c0       	rjmp	.+348    	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 520:	80 37       	cpi	r24, 0x70	; 112
 522:	19 f0       	breq	.+6      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 524:	88 37       	cpi	r24, 0x78	; 120
 526:	21 f0       	breq	.+8      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 528:	a9 c0       	rjmp	.+338    	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 52a:	e9 2f       	mov	r30, r25
 52c:	e0 61       	ori	r30, 0x10	; 16
 52e:	be 2e       	mov	r11, r30
 530:	b4 fe       	sbrs	r11, 4
 532:	0d c0       	rjmp	.+26     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 534:	fb 2d       	mov	r31, r11
 536:	f4 60       	ori	r31, 0x04	; 4
 538:	bf 2e       	mov	r11, r31
 53a:	09 c0       	rjmp	.+18     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 53c:	34 fe       	sbrs	r3, 4
 53e:	0a c0       	rjmp	.+20     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 540:	29 2f       	mov	r18, r25
 542:	26 60       	ori	r18, 0x06	; 6
 544:	b2 2e       	mov	r11, r18
 546:	06 c0       	rjmp	.+12     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 548:	28 e0       	ldi	r18, 0x08	; 8
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	05 c0       	rjmp	.+10     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 54e:	20 e1       	ldi	r18, 0x10	; 16
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	02 c0       	rjmp	.+4      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 554:	20 e1       	ldi	r18, 0x10	; 16
 556:	32 e0       	ldi	r19, 0x02	; 2
 558:	f8 01       	movw	r30, r16
 55a:	b7 fe       	sbrs	r11, 7
 55c:	07 c0       	rjmp	.+14     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 55e:	60 81       	ld	r22, Z
 560:	71 81       	ldd	r23, Z+1	; 0x01
 562:	82 81       	ldd	r24, Z+2	; 0x02
 564:	93 81       	ldd	r25, Z+3	; 0x03
 566:	0c 5f       	subi	r16, 0xFC	; 252
 568:	1f 4f       	sbci	r17, 0xFF	; 255
 56a:	06 c0       	rjmp	.+12     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 56c:	60 81       	ld	r22, Z
 56e:	71 81       	ldd	r23, Z+1	; 0x01
 570:	80 e0       	ldi	r24, 0x00	; 0
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	0e 5f       	subi	r16, 0xFE	; 254
 576:	1f 4f       	sbci	r17, 0xFF	; 255
 578:	a3 01       	movw	r20, r6
 57a:	f1 d0       	rcall	.+482    	; 0x75e <__ultoa_invert>
 57c:	88 2e       	mov	r8, r24
 57e:	86 18       	sub	r8, r6
 580:	fb 2d       	mov	r31, r11
 582:	ff 77       	andi	r31, 0x7F	; 127
 584:	3f 2e       	mov	r3, r31
 586:	36 fe       	sbrs	r3, 6
 588:	0d c0       	rjmp	.+26     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 58a:	23 2d       	mov	r18, r3
 58c:	2e 7f       	andi	r18, 0xFE	; 254
 58e:	a2 2e       	mov	r10, r18
 590:	89 14       	cp	r8, r9
 592:	58 f4       	brcc	.+22     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 594:	34 fe       	sbrs	r3, 4
 596:	0b c0       	rjmp	.+22     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 598:	32 fc       	sbrc	r3, 2
 59a:	09 c0       	rjmp	.+18     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 59c:	83 2d       	mov	r24, r3
 59e:	8e 7e       	andi	r24, 0xEE	; 238
 5a0:	a8 2e       	mov	r10, r24
 5a2:	05 c0       	rjmp	.+10     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5a4:	b8 2c       	mov	r11, r8
 5a6:	a3 2c       	mov	r10, r3
 5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5aa:	b8 2c       	mov	r11, r8
 5ac:	01 c0       	rjmp	.+2      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5ae:	b9 2c       	mov	r11, r9
 5b0:	a4 fe       	sbrs	r10, 4
 5b2:	0f c0       	rjmp	.+30     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5b4:	fe 01       	movw	r30, r28
 5b6:	e8 0d       	add	r30, r8
 5b8:	f1 1d       	adc	r31, r1
 5ba:	80 81       	ld	r24, Z
 5bc:	80 33       	cpi	r24, 0x30	; 48
 5be:	21 f4       	brne	.+8      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c0:	9a 2d       	mov	r25, r10
 5c2:	99 7e       	andi	r25, 0xE9	; 233
 5c4:	a9 2e       	mov	r10, r25
 5c6:	09 c0       	rjmp	.+18     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5c8:	a2 fe       	sbrs	r10, 2
 5ca:	06 c0       	rjmp	.+12     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5cc:	b3 94       	inc	r11
 5ce:	b3 94       	inc	r11
 5d0:	04 c0       	rjmp	.+8      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d2:	8a 2d       	mov	r24, r10
 5d4:	86 78       	andi	r24, 0x86	; 134
 5d6:	09 f0       	breq	.+2      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d8:	b3 94       	inc	r11
 5da:	a3 fc       	sbrc	r10, 3
 5dc:	10 c0       	rjmp	.+32     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5de:	a0 fe       	sbrs	r10, 0
 5e0:	06 c0       	rjmp	.+12     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5e2:	b2 14       	cp	r11, r2
 5e4:	80 f4       	brcc	.+32     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5e6:	28 0c       	add	r2, r8
 5e8:	92 2c       	mov	r9, r2
 5ea:	9b 18       	sub	r9, r11
 5ec:	0d c0       	rjmp	.+26     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5ee:	b2 14       	cp	r11, r2
 5f0:	58 f4       	brcc	.+22     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5f2:	b6 01       	movw	r22, r12
 5f4:	80 e2       	ldi	r24, 0x20	; 32
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	76 d0       	rcall	.+236    	; 0x6e6 <fputc>
 5fa:	b3 94       	inc	r11
 5fc:	f8 cf       	rjmp	.-16     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5fe:	b2 14       	cp	r11, r2
 600:	18 f4       	brcc	.+6      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 602:	2b 18       	sub	r2, r11
 604:	02 c0       	rjmp	.+4      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 606:	98 2c       	mov	r9, r8
 608:	21 2c       	mov	r2, r1
 60a:	a4 fe       	sbrs	r10, 4
 60c:	0f c0       	rjmp	.+30     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 60e:	b6 01       	movw	r22, r12
 610:	80 e3       	ldi	r24, 0x30	; 48
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	68 d0       	rcall	.+208    	; 0x6e6 <fputc>
 616:	a2 fe       	sbrs	r10, 2
 618:	16 c0       	rjmp	.+44     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 61a:	a1 fc       	sbrc	r10, 1
 61c:	03 c0       	rjmp	.+6      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 61e:	88 e7       	ldi	r24, 0x78	; 120
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	02 c0       	rjmp	.+4      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 624:	88 e5       	ldi	r24, 0x58	; 88
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	b6 01       	movw	r22, r12
 62a:	0c c0       	rjmp	.+24     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 62c:	8a 2d       	mov	r24, r10
 62e:	86 78       	andi	r24, 0x86	; 134
 630:	51 f0       	breq	.+20     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 632:	a1 fe       	sbrs	r10, 1
 634:	02 c0       	rjmp	.+4      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 636:	8b e2       	ldi	r24, 0x2B	; 43
 638:	01 c0       	rjmp	.+2      	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 63a:	80 e2       	ldi	r24, 0x20	; 32
 63c:	a7 fc       	sbrc	r10, 7
 63e:	8d e2       	ldi	r24, 0x2D	; 45
 640:	b6 01       	movw	r22, r12
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	50 d0       	rcall	.+160    	; 0x6e6 <fputc>
 646:	89 14       	cp	r8, r9
 648:	30 f4       	brcc	.+12     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 64a:	b6 01       	movw	r22, r12
 64c:	80 e3       	ldi	r24, 0x30	; 48
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	4a d0       	rcall	.+148    	; 0x6e6 <fputc>
 652:	9a 94       	dec	r9
 654:	f8 cf       	rjmp	.-16     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 656:	8a 94       	dec	r8
 658:	f3 01       	movw	r30, r6
 65a:	e8 0d       	add	r30, r8
 65c:	f1 1d       	adc	r31, r1
 65e:	80 81       	ld	r24, Z
 660:	b6 01       	movw	r22, r12
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	40 d0       	rcall	.+128    	; 0x6e6 <fputc>
 666:	81 10       	cpse	r8, r1
 668:	f6 cf       	rjmp	.-20     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 66a:	22 20       	and	r2, r2
 66c:	09 f4       	brne	.+2      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 66e:	4e ce       	rjmp	.-868    	; 0x30c <vfprintf+0x4c>
 670:	b6 01       	movw	r22, r12
 672:	80 e2       	ldi	r24, 0x20	; 32
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	37 d0       	rcall	.+110    	; 0x6e6 <fputc>
 678:	2a 94       	dec	r2
 67a:	f7 cf       	rjmp	.-18     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 67c:	f6 01       	movw	r30, r12
 67e:	86 81       	ldd	r24, Z+6	; 0x06
 680:	97 81       	ldd	r25, Z+7	; 0x07
 682:	02 c0       	rjmp	.+4      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 684:	8f ef       	ldi	r24, 0xFF	; 255
 686:	9f ef       	ldi	r25, 0xFF	; 255
 688:	2b 96       	adiw	r28, 0x0b	; 11
 68a:	0f b6       	in	r0, 0x3f	; 63
 68c:	f8 94       	cli
 68e:	de bf       	out	0x3e, r29	; 62
 690:	0f be       	out	0x3f, r0	; 63
 692:	cd bf       	out	0x3d, r28	; 61
 694:	df 91       	pop	r29
 696:	cf 91       	pop	r28
 698:	1f 91       	pop	r17
 69a:	0f 91       	pop	r16
 69c:	ff 90       	pop	r15
 69e:	ef 90       	pop	r14
 6a0:	df 90       	pop	r13
 6a2:	cf 90       	pop	r12
 6a4:	bf 90       	pop	r11
 6a6:	af 90       	pop	r10
 6a8:	9f 90       	pop	r9
 6aa:	8f 90       	pop	r8
 6ac:	7f 90       	pop	r7
 6ae:	6f 90       	pop	r6
 6b0:	5f 90       	pop	r5
 6b2:	4f 90       	pop	r4
 6b4:	3f 90       	pop	r3
 6b6:	2f 90       	pop	r2
 6b8:	08 95       	ret

000006ba <strnlen_P>:
 6ba:	fc 01       	movw	r30, r24
 6bc:	05 90       	lpm	r0, Z+
 6be:	61 50       	subi	r22, 0x01	; 1
 6c0:	70 40       	sbci	r23, 0x00	; 0
 6c2:	01 10       	cpse	r0, r1
 6c4:	d8 f7       	brcc	.-10     	; 0x6bc <strnlen_P+0x2>
 6c6:	80 95       	com	r24
 6c8:	90 95       	com	r25
 6ca:	8e 0f       	add	r24, r30
 6cc:	9f 1f       	adc	r25, r31
 6ce:	08 95       	ret

000006d0 <strnlen>:
 6d0:	fc 01       	movw	r30, r24
 6d2:	61 50       	subi	r22, 0x01	; 1
 6d4:	70 40       	sbci	r23, 0x00	; 0
 6d6:	01 90       	ld	r0, Z+
 6d8:	01 10       	cpse	r0, r1
 6da:	d8 f7       	brcc	.-10     	; 0x6d2 <strnlen+0x2>
 6dc:	80 95       	com	r24
 6de:	90 95       	com	r25
 6e0:	8e 0f       	add	r24, r30
 6e2:	9f 1f       	adc	r25, r31
 6e4:	08 95       	ret

000006e6 <fputc>:
 6e6:	0f 93       	push	r16
 6e8:	1f 93       	push	r17
 6ea:	cf 93       	push	r28
 6ec:	df 93       	push	r29
 6ee:	fb 01       	movw	r30, r22
 6f0:	23 81       	ldd	r18, Z+3	; 0x03
 6f2:	21 fd       	sbrc	r18, 1
 6f4:	03 c0       	rjmp	.+6      	; 0x6fc <fputc+0x16>
 6f6:	8f ef       	ldi	r24, 0xFF	; 255
 6f8:	9f ef       	ldi	r25, 0xFF	; 255
 6fa:	2c c0       	rjmp	.+88     	; 0x754 <fputc+0x6e>
 6fc:	22 ff       	sbrs	r18, 2
 6fe:	16 c0       	rjmp	.+44     	; 0x72c <fputc+0x46>
 700:	46 81       	ldd	r20, Z+6	; 0x06
 702:	57 81       	ldd	r21, Z+7	; 0x07
 704:	24 81       	ldd	r18, Z+4	; 0x04
 706:	35 81       	ldd	r19, Z+5	; 0x05
 708:	42 17       	cp	r20, r18
 70a:	53 07       	cpc	r21, r19
 70c:	44 f4       	brge	.+16     	; 0x71e <fputc+0x38>
 70e:	a0 81       	ld	r26, Z
 710:	b1 81       	ldd	r27, Z+1	; 0x01
 712:	9d 01       	movw	r18, r26
 714:	2f 5f       	subi	r18, 0xFF	; 255
 716:	3f 4f       	sbci	r19, 0xFF	; 255
 718:	31 83       	std	Z+1, r19	; 0x01
 71a:	20 83       	st	Z, r18
 71c:	8c 93       	st	X, r24
 71e:	26 81       	ldd	r18, Z+6	; 0x06
 720:	37 81       	ldd	r19, Z+7	; 0x07
 722:	2f 5f       	subi	r18, 0xFF	; 255
 724:	3f 4f       	sbci	r19, 0xFF	; 255
 726:	37 83       	std	Z+7, r19	; 0x07
 728:	26 83       	std	Z+6, r18	; 0x06
 72a:	14 c0       	rjmp	.+40     	; 0x754 <fputc+0x6e>
 72c:	8b 01       	movw	r16, r22
 72e:	ec 01       	movw	r28, r24
 730:	fb 01       	movw	r30, r22
 732:	00 84       	ldd	r0, Z+8	; 0x08
 734:	f1 85       	ldd	r31, Z+9	; 0x09
 736:	e0 2d       	mov	r30, r0
 738:	09 95       	icall
 73a:	89 2b       	or	r24, r25
 73c:	e1 f6       	brne	.-72     	; 0x6f6 <fputc+0x10>
 73e:	d8 01       	movw	r26, r16
 740:	16 96       	adiw	r26, 0x06	; 6
 742:	8d 91       	ld	r24, X+
 744:	9c 91       	ld	r25, X
 746:	17 97       	sbiw	r26, 0x07	; 7
 748:	01 96       	adiw	r24, 0x01	; 1
 74a:	17 96       	adiw	r26, 0x07	; 7
 74c:	9c 93       	st	X, r25
 74e:	8e 93       	st	-X, r24
 750:	16 97       	sbiw	r26, 0x06	; 6
 752:	ce 01       	movw	r24, r28
 754:	df 91       	pop	r29
 756:	cf 91       	pop	r28
 758:	1f 91       	pop	r17
 75a:	0f 91       	pop	r16
 75c:	08 95       	ret

0000075e <__ultoa_invert>:
 75e:	fa 01       	movw	r30, r20
 760:	aa 27       	eor	r26, r26
 762:	28 30       	cpi	r18, 0x08	; 8
 764:	51 f1       	breq	.+84     	; 0x7ba <__ultoa_invert+0x5c>
 766:	20 31       	cpi	r18, 0x10	; 16
 768:	81 f1       	breq	.+96     	; 0x7ca <__ultoa_invert+0x6c>
 76a:	e8 94       	clt
 76c:	6f 93       	push	r22
 76e:	6e 7f       	andi	r22, 0xFE	; 254
 770:	6e 5f       	subi	r22, 0xFE	; 254
 772:	7f 4f       	sbci	r23, 0xFF	; 255
 774:	8f 4f       	sbci	r24, 0xFF	; 255
 776:	9f 4f       	sbci	r25, 0xFF	; 255
 778:	af 4f       	sbci	r26, 0xFF	; 255
 77a:	b1 e0       	ldi	r27, 0x01	; 1
 77c:	3e d0       	rcall	.+124    	; 0x7fa <__ultoa_invert+0x9c>
 77e:	b4 e0       	ldi	r27, 0x04	; 4
 780:	3c d0       	rcall	.+120    	; 0x7fa <__ultoa_invert+0x9c>
 782:	67 0f       	add	r22, r23
 784:	78 1f       	adc	r23, r24
 786:	89 1f       	adc	r24, r25
 788:	9a 1f       	adc	r25, r26
 78a:	a1 1d       	adc	r26, r1
 78c:	68 0f       	add	r22, r24
 78e:	79 1f       	adc	r23, r25
 790:	8a 1f       	adc	r24, r26
 792:	91 1d       	adc	r25, r1
 794:	a1 1d       	adc	r26, r1
 796:	6a 0f       	add	r22, r26
 798:	71 1d       	adc	r23, r1
 79a:	81 1d       	adc	r24, r1
 79c:	91 1d       	adc	r25, r1
 79e:	a1 1d       	adc	r26, r1
 7a0:	20 d0       	rcall	.+64     	; 0x7e2 <__ultoa_invert+0x84>
 7a2:	09 f4       	brne	.+2      	; 0x7a6 <__ultoa_invert+0x48>
 7a4:	68 94       	set
 7a6:	3f 91       	pop	r19
 7a8:	2a e0       	ldi	r18, 0x0A	; 10
 7aa:	26 9f       	mul	r18, r22
 7ac:	11 24       	eor	r1, r1
 7ae:	30 19       	sub	r19, r0
 7b0:	30 5d       	subi	r19, 0xD0	; 208
 7b2:	31 93       	st	Z+, r19
 7b4:	de f6       	brtc	.-74     	; 0x76c <__ultoa_invert+0xe>
 7b6:	cf 01       	movw	r24, r30
 7b8:	08 95       	ret
 7ba:	46 2f       	mov	r20, r22
 7bc:	47 70       	andi	r20, 0x07	; 7
 7be:	40 5d       	subi	r20, 0xD0	; 208
 7c0:	41 93       	st	Z+, r20
 7c2:	b3 e0       	ldi	r27, 0x03	; 3
 7c4:	0f d0       	rcall	.+30     	; 0x7e4 <__ultoa_invert+0x86>
 7c6:	c9 f7       	brne	.-14     	; 0x7ba <__ultoa_invert+0x5c>
 7c8:	f6 cf       	rjmp	.-20     	; 0x7b6 <__ultoa_invert+0x58>
 7ca:	46 2f       	mov	r20, r22
 7cc:	4f 70       	andi	r20, 0x0F	; 15
 7ce:	40 5d       	subi	r20, 0xD0	; 208
 7d0:	4a 33       	cpi	r20, 0x3A	; 58
 7d2:	18 f0       	brcs	.+6      	; 0x7da <__ultoa_invert+0x7c>
 7d4:	49 5d       	subi	r20, 0xD9	; 217
 7d6:	31 fd       	sbrc	r19, 1
 7d8:	40 52       	subi	r20, 0x20	; 32
 7da:	41 93       	st	Z+, r20
 7dc:	02 d0       	rcall	.+4      	; 0x7e2 <__ultoa_invert+0x84>
 7de:	a9 f7       	brne	.-22     	; 0x7ca <__ultoa_invert+0x6c>
 7e0:	ea cf       	rjmp	.-44     	; 0x7b6 <__ultoa_invert+0x58>
 7e2:	b4 e0       	ldi	r27, 0x04	; 4
 7e4:	a6 95       	lsr	r26
 7e6:	97 95       	ror	r25
 7e8:	87 95       	ror	r24
 7ea:	77 95       	ror	r23
 7ec:	67 95       	ror	r22
 7ee:	ba 95       	dec	r27
 7f0:	c9 f7       	brne	.-14     	; 0x7e4 <__ultoa_invert+0x86>
 7f2:	00 97       	sbiw	r24, 0x00	; 0
 7f4:	61 05       	cpc	r22, r1
 7f6:	71 05       	cpc	r23, r1
 7f8:	08 95       	ret
 7fa:	9b 01       	movw	r18, r22
 7fc:	ac 01       	movw	r20, r24
 7fe:	0a 2e       	mov	r0, r26
 800:	06 94       	lsr	r0
 802:	57 95       	ror	r21
 804:	47 95       	ror	r20
 806:	37 95       	ror	r19
 808:	27 95       	ror	r18
 80a:	ba 95       	dec	r27
 80c:	c9 f7       	brne	.-14     	; 0x800 <__ultoa_invert+0xa2>
 80e:	62 0f       	add	r22, r18
 810:	73 1f       	adc	r23, r19
 812:	84 1f       	adc	r24, r20
 814:	95 1f       	adc	r25, r21
 816:	a0 1d       	adc	r26, r0
 818:	08 95       	ret

0000081a <_exit>:
 81a:	f8 94       	cli

0000081c <__stop_program>:
 81c:	ff cf       	rjmp	.-2      	; 0x81c <__stop_program>
